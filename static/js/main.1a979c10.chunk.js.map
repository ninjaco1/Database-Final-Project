{"version":3,"sources":["logo.svg","Components/DoctorsTable.js","views/Doctors.js","Components/HospitalTable.js","views/Hospital.js","Components/InsuranceProvidersTable.js","views/InsuranceProviders.js","Components/PatientsTable.js","views/Patients.js","Components/DrugTable.js","views/Drug.js","Components/Header.js","Components/PharmaciesTable.js","views/Pharmacies.js","Components/DrugsPharmacyTable.js","Components/InsuranceHospitalsTable.js","Components/PharmaciesPatientsTable.js","views/Relationships.js","Components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["DoctorsTable","useState","testjson","setTestjson","name","title","columns","useEffect","Axios","get","then","response","data","className","rows","onCommitChanges","added","changed","deleted","post","fName","First_Name","lName","Last_Name","DOB","sex","Sex","phoneNumber","Phone_Number","numberOfPatients","Number_of_Patients","hospitalName","Hospital_Name","console","log","showAddCommand","showEditCommand","showDeleteCommand","Doctors","props","state","handleChange","bind","event","target","value","this","setState","React","Component","HospitalTable","hospitalAddress","Street_Address","hospitalCity","City","hospitalState","State","hospitalZipcode","parseInt","Zip_Code","Hospital","validate","streetAddress","city","zipCode","InsuranceProvidersTable","providerName","Provider_Name","providerDeductable","Deductible","InsuranceProviders","PatientsTable","patientsFirst_name","First_name","patientsLast_name","Last_name","patientsDOB","patientsWeight","Weight","patientsHeight","Height","patientsSex","patientsPhone_number","Phone_number","patientsBlood_type","Blood_type","patientsMedication_Allergies","Medication_Allergies","patientsInsurance_Provider","Insurance_Provider","patientsEmployee_ID","Employee_ID","patientsHospital_Name","Patients","DrugsTable","drugName","Drug_Name","Drugs","Header","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","Item","PharmaciesTable","pharmacyName","Name","pharmacyAddress","pharmacyCity","pharmacyState","pharmacyZipcode","Pharmacies","DrugsPharmacyTable","pharmacyId","Pharmacy_ID","InsuranceHospitalsTable","PharmaciesPatientsTable","patientId","Patient_ID","Relationships","Home","class","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a979c10.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState , useEffect} from \"react\";\r\nimport { EditingState, SearchState, IntegratedFiltering } from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableHeaderRow,\r\n  TableEditRow,\r\n  TableEditColumn,\r\n} from \"@devexpress/dx-react-grid-bootstrap4\";\r\nimport \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\r\nimport Axios from \"axios\";\r\n\r\n\r\n\r\n\r\nexport default function DoctorsTable() {\r\n    let [testjson, setTestjson] = useState([]);\r\n  const [columns] = useState([\r\n    { name: \"First_Name\", title: \"First Name\" },\r\n    { name: \"Last_Name\", title: \"Last Name\" },\r\n    { name: \"DOB\", title: \"Date of Birth\" },\r\n    { name: \"Sex\", title: \"Sex\" },\r\n    { name: \"Phone_Number\", title: \"Phone Number\" },\r\n    { name: \"Number_of_Patients\", title: \"Number of Patients\" },\r\n    { name: \"Hospital_Name\", title: \"Hospital Name\" },\r\n    { name: \"Employee_ID\", title: \"Employee ID (NOTHING)\" },\r\n  ]);\r\n  // const [rows, setRows] = useState(\r\n  //   generateRows({\r\n  //     columnValues: { id: ({ index }) => index, ...defaultColumnValues },\r\n  //     length: 4,\r\n  //   })\r\n  // );\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://flip2.engr.oregonstate.edu:3001/api/doctor/get\").then(\r\n      (response) => {\r\n        // console.log(response.data);\r\n        // for (let i = 0; i < length; i++) {\r\n        //   response.data[i].id = 1;\r\n        // }\r\n        setTestjson(response.data);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n\r\n\r\n  const commitChanges = ({ added, changed, deleted }) => {\r\n    // insert into the back end\r\n    let changedRows;\r\n    if (added) {\r\n      Axios.post(\"http://flip2.engr.oregonstate.edu:3001/api/doctor/insert\", {\r\n        fName: added[0].First_Name,\r\n        lName: added[0].Last_Name,\r\n        DOB: added[0].DOB,\r\n        sex: added[0].Sex,\r\n        phoneNumber: added[0].Phone_Number,\r\n        numberOfPatients: added[0].Number_of_Patients,\r\n        hospitalName: added[0].Hospital_Name,\r\n      }).then(() => {\r\n        console.log(\"insert doctor successful\");\r\n      });\r\n    }\r\n    if (changed) {\r\n      // changedRows = testjson.map((row) =>\r\n      //   changed[row.id] ? { ...row, ...changed[row.id] } : row\r\n      // );\r\n    }\r\n    if (deleted) {\r\n      //Too pull from do deleted[0].\r\n      // const deletedSet = new Set(deleted);\r\n      // changedRows = testjson.filter((row) => !deletedSet.has(row.id));\r\n    }\r\n    // setRows(changedRows);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <Grid rows={testjson} columns={columns}>\r\n      <SearchState/>\r\n        <IntegratedFiltering />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <Table />\r\n        <TableHeaderRow />\r\n        <TableEditRow />\r\n        <TableEditColumn showAddCommand showEditCommand showDeleteCommand />\r\n        <Toolbar />\r\n        <SearchPanel />\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React, {useState} from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../Doctors.css\";\r\nimport \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\r\nimport DoctorsTable from \"../Components/DoctorsTable\";\r\n\r\n\r\nclass Doctors extends React.Component {\r\n\tconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  handleChange(event) {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n  \r\n  \r\n\trender() {\r\n\t  return (\r\n\t\t<div className=\"DoctorsPage\">\r\n\t\t  <header>\r\n\t\t\t<p>Doctor's Data Uploader</p>\r\n\t\t  </header>\r\n\t\t  <div>\r\n\t\t\t{/* <Form className=\"FormDoctors\">\r\n\t\t\t  <Form.Group className=\"GroupDoctor\" controlId=\"DoctorFirst_Name\">\r\n\t\t\t\t<Form.Label>First Name</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t  type=\"text\"\r\n\t\t\t\t  className=\"internalText\"\r\n\t\t\t\t  placeholder=\"First Name\"\r\n\t\t\t\t/>\r\n\t\t\t\t<Form.Text className=\"text-muted\">Variable Characters</Form.Text>\r\n\t\t\t  </Form.Group>\r\n\r\n\t\t\t  <Form.Group className=\"GroupDoctor\" controlId=\"DoctorLast_Name\">\r\n\t\t\t\t<Form.Label>Last Name</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t  type=\"text\"\r\n\t\t\t\t  className=\"internalText\"\r\n\t\t\t\t  placeholder=\"Last Name\"\r\n\t\t\t\t/>\r\n\t\t\t\t<Form.Text className=\"text-muted\">Variable Characters</Form.Text>\r\n\t\t\t  </Form.Group>\r\n\r\n\t\t\t  <Form.Group className=\"GroupDoctor\" controlId=\"DoctorDOB\">\r\n\t\t\t\t<Form.Label>Date of Birth</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t  type=\"text\"\r\n\t\t\t\t  className=\"internalText\"\r\n\t\t\t\t  placeholder=\"DOB\"\r\n\t\t\t\t/>\r\n\t\t\t\t<Form.Text className=\"text-muted\">YYYY-MM-DD</Form.Text>\r\n\t\t\t  </Form.Group>\r\n\r\n\t\t\t  <Form.Group className=\"GroupDoctor\" controlId=\"DoctorSex\">\r\n\t\t\t\t<Form.Label>Sex</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t  type=\"text\"\r\n\t\t\t\t  className=\"internalText\"\r\n\t\t\t\t  placeholder=\"Sex\"\r\n\t\t\t\t/>\r\n\t\t\t\t<Form.Text className=\"text-muted\">M or F Variable Char</Form.Text>\r\n\t\t\t  </Form.Group>\r\n\r\n\t\t\t  <Form.Group className=\"GroupDoctor\" controlId=\"DoctorPhone_Number\">\r\n\t\t\t\t<Form.Label>Phone Number</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t  type=\"text\"\r\n\t\t\t\t  className=\"internalText\"\r\n\t\t\t\t  placeholder=\"Phone Number\"\r\n\t\t\t\t/>\r\n\t\t\t\t<Form.Text className=\"text-muted\">\r\n\t\t\t\t  Phone Number for Doctor\r\n\t\t\t\t</Form.Text>\r\n\t\t\t  </Form.Group>\r\n\r\n\t\t\t  <Form.Group\r\n\t\t\t\tclassName=\"GroupDoctor\"\r\n\t\t\t\t controlId=\"DoctorNumber_Of_Patients\"\r\n\t\t\t  >\r\n\t\t\t\t<Form.Label>Number of Patients</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t  type=\"text\"\r\n\t\t\t\t  className=\"internalText\"\r\n\t\t\t\t  placeholder=\"Number Of Patients\"\r\n\t\t\t\t/>\r\n\t\t\t\t<Form.Text className=\"text-muted\">Positive Integer</Form.Text>\r\n\t\t\t  </Form.Group>\r\n\r\n\t\t\t  <Button variant=\"primary\" type=\"submit\">\r\n\t\t\t\tSubmit\r\n\t\t\t  </Button>\r\n\t\t\t</Form> */}\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t\t\t{/* table  */}\r\n\t\t\t\t<DoctorsTable />\r\n\t\t</div>\r\n\t  );\r\n\t}\r\n}\r\n\r\nexport default Doctors;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  EditingState,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableHeaderRow,\r\n  TableEditRow,\r\n  TableEditColumn,\r\n} from \"@devexpress/dx-react-grid-bootstrap4\";\r\nimport \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\r\nimport Axios from \"axios\";\r\n\r\nconst getRowId = (row) => row.id;\r\n\r\nexport default function HospitalTable() {\r\n  let [testjson, setTestjson] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://flip2.engr.oregonstate.edu:3001/api/hospital/get\").then(\r\n      (response) => {\r\n        // console.log(response.data);\r\n        // for (let i = 0; i < length; i++) {\r\n        //   response.data[i].id = 1;\r\n        // }\r\n        setTestjson(response.data);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const [columns] = useState([\r\n    { name: \"Hospital_Name\", title: \"Hospital Name\" },\r\n    { name: \"Street_Address\", title: \"Street Address\" },\r\n    { name: \"City\", title: \"City\" },\r\n    { name: \"State\", title: \"State\" },\r\n    { name: \"Zip_Code\", title: \"Zip Code\" },\r\n  ]);\r\n\r\n  const commitChanges = ({ added, changed, deleted }) => {\r\n    // insert into the back end\r\n    let changedRows;\r\n    if (added) {\r\n      Axios.post(\"http://flip2.engr.oregonstate.edu:3001/api/hospital/insert\", {\r\n        hospitalName: added[0].Hospital_Name,\r\n        hospitalAddress: added[0].Street_Address,\r\n        hospitalCity: added[0].City,\r\n        hospitalState: added[0].State,\r\n        hospitalZipcode: parseInt(added[0].Zip_Code),\r\n      }).then(() => {\r\n        console.log(\"insert hospital successful\");\r\n      });\r\n    }\r\n    if (changed) {\r\n      // changedRows = testjson.map((row) =>\r\n      //   changed[row.id] ? { ...row, ...changed[row.id] } : row\r\n      // );\r\n    }\r\n    if (deleted) {//Too pull from do deleted[0].\r\n      // const deletedSet = new Set(deleted);\r\n      // changedRows = testjson.filter((row) => !deletedSet.has(row.id));\r\n    }\r\n    // setRows(changedRows);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <Grid rows={testjson} columns={columns}>\r\n        <SearchState />\r\n        <IntegratedFiltering />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <Table />\r\n        <TableHeaderRow />\r\n        <TableEditRow />\r\n        <TableEditColumn showAddCommand showEditCommand showDeleteCommand />\r\n        <Toolbar />\r\n        <SearchPanel />\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\nimport { Button, Col, Form } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../Hospital.css\"\r\nimport { MDBDataTableV5 } from 'mdbreact';\r\nimport HospitalTable from \"../Components/HospitalTable\";\r\n\r\n\r\nclass Hospital extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      validate: false,\r\n      name: \"\",\r\n      streetAddress: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n      zipCode: \"\",\r\n      \r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"HopitalPage\">\r\n          <header>\r\n              Hospital's Data Uploader\r\n          </header>\r\n        {/* Name, Street, city, state, zip code */}\r\n        {/* <Form.Group controlId=\"name\" className=\"groupForms\">\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Label className=\"labelForms\" column=\"sm\">\r\n                Name\r\n              </Form.Label>\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                required\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                placeholder=\"Hospital Name\"\r\n                className=\"controlForms\"\r\n                name=\"name\"\r\n                onChange={this.handleChange}\r\n                // value={this.state.first_name}\r\n              />\r\n            </Col>\r\n          </Form.Row>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"name\" className=\"groupForms\">\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Label className=\"labelForms\" column=\"sm\">\r\n                Address\r\n              </Form.Label>\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                required\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                placeholder=\"Street Address\"\r\n                className=\"controlForms\"\r\n                name=\"streetAddress\"\r\n                onChange={this.handleChange}\r\n                // value={this.state.first_name}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                required\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                placeholder=\"City\"\r\n                className=\"controlForms\"\r\n                name=\"city\"\r\n                onChange={this.handleChange}\r\n                //value={this.state.last_name}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                required\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                placeholder=\"State\"\r\n                className=\"controlForms\"\r\n                name=\"state\"\r\n                onChange={this.handleChange}\r\n                //value={this.state.last_name}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                required\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                placeholder=\"Zip Code\"\r\n                className=\"controlForms\"\r\n                name=\"zipCode\"\r\n                onChange={this.handleChange}\r\n                //value={this.state.last_name}\r\n              />\r\n            </Col>\r\n          </Form.Row>\r\n        </Form.Group>\r\n        <Button variant=\"outline-danger\" type=\"submit\">\r\n          Submit\r\n        </Button> */}\r\n\r\n       \r\n      {/* table  */}\r\n      <HospitalTable />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Hospital;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  EditingState,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableHeaderRow,\r\n  TableEditRow,\r\n  TableEditColumn,\r\n} from \"@devexpress/dx-react-grid-bootstrap4\";\r\nimport \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\r\nimport Axios from \"axios\";\r\n\r\nconst getRowId = (row) => row.id;\r\n\r\nexport default function InsuranceProvidersTable() {\r\n  let [testjson, setTestjson] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://flip2.engr.oregonstate.edu:3001/api/insurance/get\").then(\r\n      (response) => {\r\n        // console.log(response.data);\r\n        // for (let i = 0; i < length; i++) {\r\n        //   response.data[i].id = 1;\r\n        // }\r\n        setTestjson(response.data);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n    \r\n  const [columns] = useState([\r\n    { name: \"Provider_Name\", title: \"Provider Name\" },\r\n    { name: \"Deductible\", title: \"Deductible\" },\r\n  ]);\r\n\r\n  const commitChanges = ({ added, changed, deleted }) => {\r\n    // insert into the back end\r\n    let changedRows;\r\n    if (added) {\r\n      Axios.post(\r\n        \"http://flip2.engr.oregonstate.edu:3001/api/insurance/insert\",\r\n        {\r\n          providerName: added[0].Provider_Name,\r\n          providerDeductable: added[0].Deductible,\r\n        }\r\n      ).then(() => {\r\n        console.log(\"insert InsuranceProviders successful\");\r\n      });\r\n    }\r\n    if (changed) {\r\n      // changedRows = testjson.map((row) =>\r\n      //   changed[row.id] ? { ...row, ...changed[row.id] } : row\r\n      // );\r\n    }\r\n    if (deleted) {//Too pull from do deleted[0].\r\n      // const deletedSet = new Set(deleted);\r\n      // changedRows = testjson.filter((row) => !deletedSet.has(row.id));\r\n    }\r\n    // setRows(changedRows);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <Grid rows={testjson} columns={columns}>\r\n        <SearchState />\r\n        <IntegratedFiltering />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <Table />\r\n        <TableHeaderRow />\r\n        <TableEditRow />\r\n        <TableEditColumn showAddCommand showEditCommand showDeleteCommand />\r\n        <Toolbar />\r\n        <SearchPanel />\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Button, Col, Form } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../InsuranceProviders.css\"\r\nimport \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\r\nimport InsuranceProvidersTable from \"../Components/InsuranceProvidersTable\";\r\n\r\nclass InsuranceProviders extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  handleChange(event) {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header>\r\n              Insurance Provider's Data Upload\r\n        </header>\r\n        {/* <Form.Group controlId=\"name\" className=\"groupForms\">\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Label className=\"labelForms\" column=\"sm\">\r\n                Provider Name\r\n              </Form.Label>\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                required\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                placeholder=\"Provider Name\"\r\n                className=\"controlForms\"\r\n                name=\"provider_name\"\r\n                onChange={this.handleChange}\r\n                // value={this.state.first_name}\r\n              />\r\n            </Col>\r\n          </Form.Row>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"name\" className=\"groupForms\">\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Label className=\"labelForms\" column=\"sm\">\r\n                Deductible\r\n              </Form.Label>\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                required\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                placeholder=\"Deductible\"\r\n                className=\"controlForms\"\r\n                name=\"Deductible\"\r\n                onChange={this.handleChange}\r\n                // value={this.state.first_name}\r\n              />\r\n            </Col>\r\n          </Form.Row>\r\n        </Form.Group>\r\n\r\n        <Button variant=\"outline-danger\" type=\"submit\">\r\n          Submit\r\n        </Button> */}\r\n\t\t {/* table  */}\r\n      <InsuranceProvidersTable />\r\n            </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InsuranceProviders;\r\n","import React, { useState , useEffect} from \"react\";\r\nimport { EditingState, SearchState, IntegratedFiltering } from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableHeaderRow,\r\n  TableEditRow,\r\n  TableEditColumn,\r\n} from \"@devexpress/dx-react-grid-bootstrap4\";\r\nimport \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\r\nimport Axios from \"axios\";\r\n\r\n// const getRowId = (row) => row.id;\r\n\r\nexport default function PatientsTable() {\r\n  let [testjson, setTestjson] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://flip2.engr.oregonstate.edu:3001/api/patients/get\").then(\r\n      (response) => {\r\n        setTestjson(response.data);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const [columns] = useState([\r\n    { name: \"First_name\", title: \"First Name\" },\r\n    { name: \"Last_name\", title: \"Last Name\" },\r\n    { name: \"DOB\", title: \"Date of Birth\" },\r\n    { name: \"Weight\", title: \"Weight (lbs)\" },\r\n    { name: \"Height\", title: \"Height (in)\" },\r\n    { name: \"Sex\", title: \"Sex\" },\r\n    { name: \"Phone_number\", title: \"Phone Number\" },\r\n    { name: \"Blood_type\", title: \"Blood Type\" },\r\n    { name: \"Medication_Allergies\", title: \"Medication Allergies\" },\r\n    { name: \"Insurance_Provider\", title: \"Insurance Provider\" },\r\n    { name: \"Employee_ID\", title: \"Employee ID\" },\r\n    { name: \"Hospital_Name\", title: \"Hospital Name\" },\r\n    { name: \"Patient_ID\", title: \"Patient ID(NOTHING)\" },\r\n\r\n  ]);\r\n\r\n  const commitChanges = ({ added, changed, deleted }) => {\r\n    // insert into the back end\r\n    let changedRows;\r\n    if (added) {\r\n      Axios.post(\"http://flip2.engr.oregonstate.edu:3001/api/patients/insert\", {\r\n        patientsFirst_name: added[0].First_name,\r\n        patientsLast_name: added[0].Last_name,\r\n        patientsDOB: added[0].DOB,\r\n        patientsWeight: added[0].Weight,\r\n        patientsHeight: added[0].Height,\r\n        patientsSex: added[0].Sex,\r\n        patientsPhone_number: added[0].Phone_number,\r\n        patientsBlood_type: added[0].Blood_type,\r\n        patientsMedication_Allergies: added[0].Medication_Allergies,\r\n        patientsInsurance_Provider: added[0].Insurance_Provider,\r\n        patientsEmployee_ID: added[0].Employee_ID,\r\n        patientsHospital_Name: added[0].Hospital_Name,\r\n      }).then(() => {\r\n        console.log(\"insert Patients successful\");\r\n      });\r\n    }\r\n    if (changed) {\r\n      // changedRows = testjson.map((row) =>\r\n      //   changed[row.id] ? { ...row, ...changed[row.id] } : row\r\n      // );\r\n    }\r\n    if (deleted) {//Too pull from do deleted[0].\r\n      // const deletedSet = new Set(deleted);\r\n      // changedRows = testjson.filter((row) => !deletedSet.has(row.id));\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n        {/* seach  */}\r\n        {/* table */}\r\n      <Grid rows={testjson} columns={columns}>\r\n        <SearchState/>\r\n        <IntegratedFiltering />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <Table />\r\n        <TableHeaderRow />\r\n        <TableEditRow />\r\n        <TableEditColumn showAddCommand showEditCommand showDeleteCommand />\r\n        <Toolbar />\r\n        <SearchPanel />\r\n      </Grid>\r\n    </div>\r\n  );\r\n};","import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../Patients.css\";\r\nimport \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\r\nimport PatientsTable from \"../Components/PatientsTable\";\r\n\r\nclass Patients extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      \r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    \r\n  }\r\n  handleChange(event) {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n  \r\n  render() {\r\n\r\n    return (\r\n      <div className=\"PatientsPage\">\r\n        <header>\r\n          <p>Patient's Data Uploader</p>\r\n        </header>\r\n        {/* <div>\r\n          <Form className=\"FormPatients\">\r\n            <Form.Group className=\"GroupPatient\" controlId=\"PatientsFirst_Name\">\r\n              <Form.Label>First Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"internalText\"\r\n                placeholder=\"First_Name\"\r\n              />\r\n              <Form.Text className=\"text-muted\">Variable Characters</Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"GroupPatient\" controlId=\"PatientsLast_Name\">\r\n              <Form.Label>Last Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"internalText\"\r\n                placeholder=\"Last_Name\"\r\n              />\r\n              <Form.Text className=\"text-muted\">Variable Characters</Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"GroupPatient\" controlId=\"PatientsDOB\">\r\n              <Form.Label>Date of Birth</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"internalText\"\r\n                placeholder=\"DOB\"\r\n              />\r\n              <Form.Text className=\"text-muted\">YYYY-MM-DD</Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"GroupPatient\" controlId=\"PatientsWeight\">\r\n              <Form.Label>Weight</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"internalText\"\r\n                placeholder=\"Weight\"\r\n              />\r\n              <Form.Text className=\"text-muted\">Integer</Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"GroupPatient\" controlId=\"PatientsHeight\">\r\n              <Form.Label>Height</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"internalText\"\r\n                placeholder=\"Height\"\r\n              />\r\n              <Form.Text className=\"text-muted\">Variable Characters</Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"GroupPatient\" controlId=\"PatientsSex\">\r\n              <Form.Label>Sex</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"internalText\"\r\n                placeholder=\"Sex\"\r\n              />\r\n              <Form.Text className=\"text-muted\">M or F Variable Char</Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              className=\"GroupPatient\"\r\n              controlId=\"PatientsPhone_Number\"\r\n            >\r\n              <Form.Label>Phone Number</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"internalText\"\r\n                placeholder=\"Phone_Number\"\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                Phone Number for Patients\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"GroupPatient\" controlId=\"PatientsBlood_Type\">\r\n              <Form.Label>Blood Type</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"internalText\"\r\n                placeholder=\"Blood_Type\"\r\n              />\r\n              <Form.Text className=\"text-muted\">A, AB, B, O AND +/-</Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              className=\"GroupPatient\"\r\n              controlId=\"PatientsMedication_allergies\"\r\n            >\r\n              <Form.Label>Medication Allergies</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"internalText\"\r\n                placeholder=\"Medication_allergies\"\r\n              />\r\n              <Form.Text className=\"text-muted\">1(True) or 0(False)</Form.Text>\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </div> */}\r\n        {/* table  */}\r\n        <PatientsTable />\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Patients;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  EditingState,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableHeaderRow,\r\n  TableEditRow,\r\n  TableEditColumn,\r\n} from \"@devexpress/dx-react-grid-bootstrap4\";\r\nimport \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\r\nimport Axios from \"axios\";\r\n\r\nexport default function DrugsTable() {\r\nconst getRowId = (row) => row.id;\r\nlet [testjson, setTestjson] = useState([]);\r\n\r\nuseEffect(() => {\r\n  Axios.get(\"http://flip2.engr.oregonstate.edu:3001/api/drugs/get\").then(\r\n    (response) => {\r\n      // console.log(response.data);\r\n      // for (let i = 0; i < length; i++) {\r\n      //   response.data[i].id = 1;\r\n      // }\r\n      setTestjson(response.data);\r\n    }\r\n  );\r\n}, []);\r\n\r\n  const [columns] = useState([\r\n    { name: \"Drug_Name\", title: \"Drug Name\" },\r\n  ]);\r\n  \r\n  const commitChanges = ({ added, changed, deleted }) => {\r\n    // insert into the back end\r\n    let changedRows;\r\n    if (added) {\r\n      Axios.post(\"http://flip2.engr.oregonstate.edu:3001/api/drugs/insert\", {\r\n        drugName: added[0].Drug_Name,\r\n      }).then(() => {\r\n        console.log(\"insert hospital successful\");\r\n      });\r\n    }\r\n    if (changed) {\r\n      // changedRows = testjson.map((row) =>\r\n      //   changed[row.id] ? { ...row, ...changed[row.id] } : row\r\n      // );\r\n    }\r\n    if (deleted) {//Too pull from do deleted[0].\r\n      // const deletedSet = new Set(deleted);\r\n      // changedRows = testjson.filter((row) => !deletedSet.has(row.id));\r\n    }\r\n    // setRows(changedRows);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <Grid rows={testjson} columns={columns}>\r\n        <SearchState />\r\n        <IntegratedFiltering />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <Table />\r\n        <TableHeaderRow />\r\n        <TableEditRow />\r\n        <TableEditColumn showAddCommand showEditCommand showDeleteCommand />\r\n        <Toolbar />\r\n        <SearchPanel />\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../Drug.css\";\r\nimport \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\r\nimport DrugsTable from \"../Components/DrugTable\";\r\n\r\nclass Drugs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  //       name:\"\",\r\n  // \t  datatable: {\r\n  //         columns: [\r\n  //           {\r\n  //             label: 'First Name',\r\n  //             field: 'first_name',\r\n  //             width: 150,\r\n  //             attributes: {\r\n  //             'aria-controls': 'DataTable',\r\n  //             'aria-label': 'Name',\r\n  //             }\r\n  // \t\t  }\r\n  //         ],\r\n  //         rows: [\r\n  // \t\t\t{\r\n  // \t\t\t\tname:\"Morphine\",\r\n  // \t\t\t},\r\n  // \t\t\t{\r\n  // \t\t\t\tname:\"Ibuprofen\",\r\n  // \t\t\t}\r\n  //         ]\r\n  //       }\r\n  //     };\r\n  //     this.handleChange = this.handleChange.bind(this);\r\n  //   }\r\n  //   handleChange(event) {\r\n  //     const { name, value } = event.target;\r\n  //     this.setState({\r\n  //       [name]: value,\r\n  //     });\r\n  //   }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"DrugsPage\">\r\n        <header>\r\n          <p>Drug's Data Uploader</p>\r\n        </header>\r\n        <div>\r\n          {/* <Form className=\"FormDrugs\">\r\n            <Form.Group className=\"GroupDoctor\" controlId=\"DoctorFirst_Name\">\r\n              <Form.Label>First Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"internalText\"\r\n                placeholder=\"First Name\"\r\n              />\r\n              <Form.Text className=\"text-muted\">Variable Characters</Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"GroupDoctor\" controlId=\"DoctorLast_Name\">\r\n              <Form.Label>Last Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"internalText\"\r\n                placeholder=\"Last Name\"\r\n              />\r\n              <Form.Text className=\"text-muted\">Variable Characters</Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"GroupDoctor\" controlId=\"DoctorDOB\">\r\n              <Form.Label>Date of Birth</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"internalText\"\r\n                placeholder=\"DOB\"\r\n              />\r\n              <Form.Text className=\"text-muted\">YYYY-MM-DD</Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"GroupDoctor\" controlId=\"Drugsex\">\r\n              <Form.Label>Sex</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"internalText\"\r\n                placeholder=\"Sex\"\r\n              />\r\n              <Form.Text className=\"text-muted\">M or F Variable Char</Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"GroupDoctor\" controlId=\"DoctorPhone_Number\">\r\n              <Form.Label>Phone Number</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"internalText\"\r\n                placeholder=\"Phone Number\"\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                Phone Number for Doctor\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              className=\"GroupDoctor\"\r\n              controlId=\"DoctorNumber_Of_Patients\"\r\n            >\r\n              <Form.Label>Number of Patients</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"internalText\"\r\n                placeholder=\"Number Of Patients\"\r\n              />\r\n              <Form.Text className=\"text-muted\">Positive Integer</Form.Text>\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form> */}\r\n        </div>\r\n        {/* table  */}\r\n        {/* <MDBDataTableV5\r\n          hover\r\n          entriesOptions={[5, 20, 25]}\r\n          entries={5}\r\n          pagesAmount={4}\r\n          data={this.state.datatable} \r\n        />*/}\r\n\t\t<DrugsTable />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Drugs;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n} from \"react-bootstrap\"; // Navbar material\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../Header.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div>\r\n      {/* Navbar  */}\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"https://ninjaco1.github.io/my-app/#/\">\r\n          Hospital for SQL Injectors\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <NavDropdown title=\"Data Uploaders\" id=\"collapsable-nav-dropdown\">\r\n              <NavDropdown.Item href=\"/my-app/#/hospitals\">\r\n                Hospitals\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/my-app/#/doctors\">\r\n                Doctors\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/my-app/#/patients\">\r\n                Patients\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/my-app/#/insurance\">\r\n                Insurance Providers\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/my-app/#/pharmacies\">\r\n                Pharmacies\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/my-app/#/drugs\">\r\n                Drugs\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/my-app/#/relationships\">\r\n                Relationships\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n            {/* <Nav.Link href=\"/pricing\">Pricing</Nav.Link> */}\r\n          </Nav>\r\n          <Nav>\r\n            {/* <Nav.Link href=\"/enterprise\">For Enterprise</Nav.Link> */}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  EditingState,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableHeaderRow,\r\n  TableEditRow,\r\n  TableEditColumn,\r\n} from \"@devexpress/dx-react-grid-bootstrap4\";\r\nimport \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\r\nimport Axios from \"axios\";\r\n\r\nexport default function PharmaciesTable() {\r\n  let [testjson, setTestjson] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://flip2.engr.oregonstate.edu:3001/api/pharmacies/get\").then(\r\n      (response) => {\r\n        // console.log(response.data);\r\n        // for (let i = 0; i < length; i++) {\r\n        //   response.data[i].id = 1;\r\n        // }\r\n        setTestjson(response.data);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const [columns] = useState([\r\n    { name: \"Name\", title: \"Pharmacy Name\" },\r\n    { name: \"Street_Address\", title: \"Street Address\" },\r\n    { name: \"City\", title: \"City\" },\r\n    { name: \"State\", title: \"State\" },\r\n    { name: \"Zip_Code\", title: \"Zip Code\" },\r\n    { name: \"Pharmacy_ID\", title: \"Pharmacy ID(CAN'T CHANGE)\" },\r\n  ]);\r\n\r\n  const commitChanges = ({ added, changed, deleted }) => {\r\n    // insert into the back end\r\n    let changedRows;\r\n    if (added) {\r\n      // console.log(\"added: \" + added[0].Name);\r\n\r\n      Axios.post(\r\n        \"http://flip2.engr.oregonstate.edu:3001/api/pharmacies/insert\",\r\n        {\r\n          pharmacyName: added[0].Name,\r\n          pharmacyAddress: added[0].Street_Address,\r\n          pharmacyCity: added[0].City,\r\n          pharmacyState: added[0].State,\r\n          pharmacyZipcode: parseInt(added[0].Zip_Code),\r\n        }\r\n      ).then(() => {\r\n        console.log(\"insert pharmacy successful\");\r\n      });\r\n    }\r\n    if (changed) {\r\n      // changedRows = testjson.map((row) =>\r\n      //   changed[row.id] ? { ...row, ...changed[row.id] } : row\r\n      // );\r\n    }\r\n    if (deleted) {\r\n      //Too pull from do deleted[0].\r\n      // const deletedSet = new Set(deleted);\r\n      // changedRows = testjson.filter((row) => !deletedSet.has(row.id));\r\n    }\r\n    // setRows(changedRows);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <Grid rows={testjson} columns={columns}>\r\n        <SearchState />\r\n        <IntegratedFiltering />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <Table />\r\n        <TableHeaderRow />\r\n        <TableEditRow />\r\n        <TableEditColumn showAddCommand showEditCommand showDeleteCommand />\r\n        <Toolbar />\r\n        <SearchPanel />\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Col, Form } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../Pharmacies.css\";\r\nimport PharmaciesTable from \"../Components/PharmaciesTable\";\r\n\r\n\r\nclass Pharmacies extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      validate: false,\r\n\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* Name, Street, city, state, zip code */}\r\n        <header>Pharmacy's Data Uploader</header>\r\n        {/* <Form.Group controlId=\"name\" className=\"groupForms\">\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Label className=\"labelForms\" column=\"sm\">\r\n                Name\r\n              </Form.Label>\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                required\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                placeholder=\"Pharmacies Name\"\r\n                className=\"controlForms\"\r\n                name=\"name\"\r\n                onChange={this.handleChange}\r\n                // value={this.state.first_name}\r\n              />\r\n            </Col>\r\n          </Form.Row>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"name\" className=\"groupForms\">\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Label className=\"labelForms\" column=\"sm\">\r\n                Address\r\n              </Form.Label>\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                required\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                placeholder=\"Street Address\"\r\n                className=\"controlForms\"\r\n                name=\"streetAddress\"\r\n                onChange={this.handleChange}\r\n                // value={this.state.first_name}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                required\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                placeholder=\"City\"\r\n                className=\"controlForms\"\r\n                name=\"city\"\r\n                onChange={this.handleChange}\r\n                //value={this.state.last_name}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                required\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                placeholder=\"State\"\r\n                className=\"controlForms\"\r\n                name=\"state\"\r\n                onChange={this.handleChange}\r\n                //value={this.state.last_name}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                required\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                placeholder=\"Zip Code\"\r\n                className=\"controlForms\"\r\n                name=\"zipCode\"\r\n                onChange={this.handleChange}\r\n                //value={this.state.last_name}\r\n              />\r\n            </Col>\r\n          </Form.Row>\r\n        </Form.Group>\r\n        <Button variant=\"outline-danger\" type=\"submit\">\r\n          Submit\r\n        </Button> */}\r\n\r\n        {/* table  */}\r\n        <PharmaciesTable />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pharmacies;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  EditingState,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableHeaderRow,\r\n  TableEditRow,\r\n  TableEditColumn,\r\n} from \"@devexpress/dx-react-grid-bootstrap4\";\r\nimport \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\r\nimport Axios from \"axios\";\r\n\r\nconst getRowId = (row) => row.id;\r\n\r\nexport default function DrugsPharmacyTable() {\r\n  let [testjson, setTestjson] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\r\n      \"http://flip2.engr.oregonstate.edu:3001/api/drugspharmacy/get\"\r\n    ).then((response) => {\r\n      setTestjson(response.data);\r\n    });\r\n  }, []);\r\n\r\n   const [columns] = useState([\r\n     { name: \"Drug_Name\", title: \"Drug's Name\" },\r\n     { name: \"Pharmacy_ID\", title: \"Pharmacies ID\" },\r\n   ]);\r\n   \r\n  const commitChanges = ({ added, changed, deleted }) => {\r\n    // insert into the back end\r\n    let changedRows;\r\n    if (added) {\r\n      Axios.post(\r\n        \"http://flip2.engr.oregonstate.edu:3001/api/drugspharmacy/insert\",\r\n        {\r\n          drugName: added[0].Drug_Name,\r\n          pharmacyId: added[0].Pharmacy_ID,\r\n        }\r\n      ).then(() => {\r\n        console.log(\"insert drugspharmacy successful\");\r\n      });\r\n    }\r\n    if (changed) {\r\n      // changedRows = testjson.map((row) =>\r\n      //   changed[row.id] ? { ...row, ...changed[row.id] } : row\r\n      // );\r\n    }\r\n    if (deleted) {//Too pull from do deleted[0].\r\n      // const deletedSet = new Set(deleted);\r\n      // changedRows = testjson.filter((row) => !deletedSet.has(row.id));\r\n    }\r\n    // setRows(changedRows);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <Grid rows={testjson} columns={columns}>\r\n        <SearchState />\r\n        <IntegratedFiltering />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <Table />\r\n        <TableHeaderRow />\r\n        <TableEditRow />\r\n        <TableEditColumn showAddCommand showEditCommand showDeleteCommand />\r\n        <Toolbar />\r\n        <SearchPanel />\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  EditingState,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableHeaderRow,\r\n  TableEditRow,\r\n  TableEditColumn,\r\n} from \"@devexpress/dx-react-grid-bootstrap4\";\r\nimport \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\r\nimport Axios from \"axios\";\r\n\r\nconst getRowId = (row) => row.id;\r\n\r\nexport default function InsuranceHospitalsTable() {\r\n  let [testjson, setTestjson] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\r\n      \"http://flip2.engr.oregonstate.edu:3001/api/insurancehospitals/get\"\r\n    ).then((response) => {\r\n      // console.log(response.data);\r\n      // for (let i = 0; i < length; i++) {\r\n      //   response.data[i].id = 1;\r\n      // }\r\n      setTestjson(response.data);\r\n    });\r\n  }, []);\r\n  const [columns] = useState([\r\n    { name: \"Provider_Name\", title: \"Provider's Name\" },\r\n    { name: \"Hospital_Name\", title: \"Hospital's Name\" },\r\n  ]);\r\n  \r\n  const commitChanges = ({ added, changed, deleted }) => {\r\n    // insert into the back end\r\n    let changedRows;\r\n    if (added) {\r\n      Axios.post(\r\n        \"http://flip2.engr.oregonstate.edu/api/insurancehospitals/insert\",\r\n        {\r\n          providerName: added[0].Provider_Name,\r\n          hospitalName: added[0].Hospital_Name,\r\n        }\r\n      ).then(() => {\r\n        console.log(\"insert insurancehospital successful\");\r\n      });\r\n    }\r\n    if (changed) {\r\n      // changedRows = testjson.map((row) =>\r\n      //   changed[row.id] ? { ...row, ...changed[row.id] } : row\r\n      // );\r\n    }\r\n    if (deleted) {//Too pull from do deleted[0].\r\n      // const deletedSet = new Set(deleted);\r\n      // changedRows = testjson.filter((row) => !deletedSet.has(row.id));\r\n    }\r\n    // setRows(changedRows);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <Grid rows={testjson} columns={columns}>\r\n        <SearchState />\r\n        <IntegratedFiltering />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <Table />\r\n        <TableHeaderRow />\r\n        <TableEditRow />\r\n        <TableEditColumn showAddCommand showEditCommand showDeleteCommand />\r\n        <Toolbar />\r\n        <SearchPanel />\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  EditingState,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableHeaderRow,\r\n  TableEditRow,\r\n  TableEditColumn,\r\n} from \"@devexpress/dx-react-grid-bootstrap4\";\r\nimport \"@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css\";\r\nimport Axios from \"axios\";\r\n\r\nconst getRowId = (row) => row.id;\r\n\r\nexport default function PharmaciesPatientsTable() {\r\n  let [testjson, setTestjson] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\r\n      \"http://flip2.engr.oregonstate.edu:3001/api/pharmaciespatients/get\"\r\n    ).then((response) => {\r\n      // console.log(response.data);\r\n      // for (let i = 0; i < length; i++) {\r\n      //   response.data[i].id = 1;\r\n      // }\r\n      setTestjson(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const [columns] = useState([\r\n    { name: \"Patient_ID\", title: \"Patient's ID\" },\r\n    { name: \"Pharmacy_ID\", title: \"Pharmacies ID\" },\r\n  ]);\r\n\r\n  const commitChanges = ({ added, changed, deleted }) => {\r\n    // insert into the back end\r\n    let changedRows;\r\n    if (added) {\r\n      Axios.post(\r\n        \"http://flip2.engr.oregonstate.edu:3001/api/pharmaciespatients/insert\",\r\n        {\r\n          patientId: added[0].Patient_ID,\r\n          pharmacyId: added[0].Pharmacy_ID,\r\n        }\r\n      ).then(() => {\r\n        console.log(\"insert pharmaciespatients successful\");\r\n      });\r\n    }\r\n    if (changed) {\r\n      // changedRows = testjson.map((row) =>\r\n      //   changed[row.id] ? { ...row, ...changed[row.id] } : row\r\n      // );\r\n    }\r\n    if (deleted) {//Too pull from do deleted[0].\r\n      // const deletedSet = new Set(deleted);\r\n      // changedRows = testjson.filter((row) => !deletedSet.has(row.id));\r\n    }\r\n    // setRows(changedRows);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <Grid rows={testjson} columns={columns}>\r\n        <SearchState />\r\n        <IntegratedFiltering />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <Table />\r\n        <TableHeaderRow />\r\n        <TableEditRow />\r\n        <TableEditColumn showAddCommand showEditCommand showDeleteCommand />\r\n        <Toolbar />\r\n        <SearchPanel />\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { Button, Col, Form } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import \"../RelationshipTable.css\";\r\nimport DrugsPharmacyTable from \"../Components/DrugsPharmacyTable\";\r\nimport InsuranceHospitalsTable from \"../Components/InsuranceHospitalsTable\";\r\nimport PharmaciesPatientsTable from \"../Components/PharmaciesPatientsTable\";\r\n\r\nclass Relationships extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        validate: false,\r\n  \r\n      };\r\n      this.handleChange = this.handleChange.bind(this);\r\n    }\r\n  \r\n    handleChange(event) {\r\n      const { name, value } = event.target;\r\n      this.setState({\r\n        [name]: value,\r\n      });\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <header>DrugsPharmacy's Data Uploader</header>\r\n          <DrugsPharmacyTable />\r\n\r\n          <header>InsuranceHospitals's Data Uploader</header>\r\n          <InsuranceHospitalsTable />\r\n\r\n          <header>PharmaciesPatients's Data Uploader</header>\r\n          <PharmaciesPatientsTable />\r\n        </div>\r\n      );\r\n    }\r\n}\r\n  \r\n  export default Relationships;","import React from 'react';\r\nimport \"../Home.css\";\r\n\r\nfunction Home(){\r\n    return(\r\n        <div class=\"HomePage\">\r\n            Home Page\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Home;","import logo from './logo.svg';\r\nimport './App.css';\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport Doctors from \"./views/Doctors\";\r\nimport Hospital from './views/Hospital';\r\nimport InsuranceProviders from './views/InsuranceProviders';\r\nimport Patients from \"./views/Patients\";\r\nimport Drugs from \"./views/Drug\";\r\nimport Header from \"./Components/Header\"\r\nimport Pharmacies from \"./views/Pharmacies\";\r\nimport Relationships from \"./views/Relationships\";\r\nimport Home from \"./Components/Home\";\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n   \r\n      {/* <Router> */}\r\n        {/* header on every page */}\r\n        <Header /> \r\n        {/* Route */}\r\n        {/* <Switch> */}\r\n          {/* <Route path=\"/my-app/doctors\">\r\n            <Doctors />\r\n          </Route>\r\n          \r\n          <Route path=\"/my-app/hospitals\">\r\n            <Hospital />\r\n          </Route>\r\n\r\n          <Route path=\"/my-app/insurance\">\r\n            <InsuranceProviders />\r\n          </Route>\r\n\r\n          <Route path=\"/my-app/patients\">\r\n            <Patients />\r\n          </Route>\r\n\r\n          <Route path=\"/my-app/pharmacies\">\r\n            <Pharmacies />\r\n          </Route>\r\n\r\n          <Route path=\"/my-app/drugs\">\r\n            <Drugs />\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route> */}\r\n        {/* </Switch> */}\r\n\r\n      {/* </Router> */}\r\n      <Route exact path='/'component={Home}/>\r\n      <Route path='/doctors' component={Doctors}/>\r\n      <Route path='/hospitals' component={Hospital}/>\r\n      <Route path='/insurance' component={InsuranceProviders}/>\r\n      <Route path='/patients' component={Patients}/>\r\n      <Route path='/pharmacies' component={Pharmacies}/>\r\n      <Route path='/drugs' component={Drugs}/>\r\n      <Route path='/relationships' component={Relationships}/>\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}