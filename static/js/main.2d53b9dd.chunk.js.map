{"version":3,"sources":["logo.svg","views/Doctors.js","views/Hospital.js","views/InsuranceProviders.js","views/Patients.js","Components/Header.js","views/Pharmacies.js","Components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Doctors","class","Form","className","Group","controlId","Label","Control","type","placeholder","Text","Button","variant","Hospital","props","state","validate","name","streetAddress","city","zipCode","handleChange","bind","event","target","value","this","setState","Row","Col","column","required","size","onChange","React","Component","InsuranceProviders","provider_name","preExistingConditions","deductable","Patients","Header","Navbar","collapseOnSelect","expand","bg","Brand","href","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","title","Item","Pharmacies","Home","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d53b9dd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../Doctors.css\";\r\n\r\nfunction Doctors() {\r\n  return (\r\n    <div class=\"DoctorsPage\">\r\n      <header>\r\n        <p>Doctor's Data Uploader</p>\r\n      </header>\r\n      <div>\r\n        <Form className=\"FormDoctors\">\r\n          <Form.Group className=\"GroupDoctor\" controlId=\"DoctorFirst_Name\">\r\n            <Form.Label>First Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              className=\"internalText\"\r\n              placeholder=\"First Name\"\r\n            />\r\n            <Form.Text className=\"text-muted\">Variable Characters</Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"GroupDoctor\" controlId=\"DoctorLast_Name\">\r\n            <Form.Label>Last Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              className=\"internalText\"\r\n              placeholder=\"Last Name\"\r\n            />\r\n            <Form.Text className=\"text-muted\">Variable Characters</Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"GroupDoctor\" controlId=\"DoctorDOB\">\r\n            <Form.Label>Date of Birth</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              className=\"internalText\"\r\n              placeholder=\"DOB\"\r\n            />\r\n            <Form.Text className=\"text-muted\">YYYY-MM-DD</Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"GroupDoctor\" controlId=\"DoctorSex\">\r\n            <Form.Label>Sex</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              className=\"internalText\"\r\n              placeholder=\"Sex\"\r\n            />\r\n            <Form.Text className=\"text-muted\">M or F Variable Char</Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"GroupDoctor\" controlId=\"DoctorPhone_Number\">\r\n            <Form.Label>Phone Number</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              className=\"internalText\"\r\n              placeholder=\"Phone Number\"\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              Phone Number for Doctor\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group\r\n            className=\"GroupDoctor\"\r\n             controlId=\"DoctorNumber_Of_Patients\"\r\n          >\r\n            <Form.Label>Number of Patients</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              className=\"internalText\"\r\n              placeholder=\"Number Of Patients\"\r\n            />\r\n            <Form.Text className=\"text-muted\">Positive Integer</Form.Text>\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Doctors;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Col, Form } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../Hospital.css\"\r\n\r\n\r\nclass Hospital extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      validate: false,\r\n      name: \"\",\r\n      streetAddress: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n      zipCode: \"\",\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"HopitalPage\">\r\n          <header>\r\n              Hospital's Data Uploader\r\n          </header>\r\n        {/* Name, Street, city, state, zip code */}\r\n        <Form.Group controlId=\"name\" className=\"groupForms\">\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Label className=\"labelForms\" column=\"sm\">\r\n                Name\r\n              </Form.Label>\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                required\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                placeholder=\"Hospital Name\"\r\n                className=\"controlForms\"\r\n                name=\"name\"\r\n                onChange={this.handleChange}\r\n                // value={this.state.first_name}\r\n              />\r\n            </Col>\r\n          </Form.Row>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"name\" className=\"groupForms\">\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Label className=\"labelForms\" column=\"sm\">\r\n                Address\r\n              </Form.Label>\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                required\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                placeholder=\"Street Address\"\r\n                className=\"controlForms\"\r\n                name=\"streetAddress\"\r\n                onChange={this.handleChange}\r\n                // value={this.state.first_name}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                required\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                placeholder=\"City\"\r\n                className=\"controlForms\"\r\n                name=\"city\"\r\n                onChange={this.handleChange}\r\n                //value={this.state.last_name}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                required\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                placeholder=\"State\"\r\n                className=\"controlForms\"\r\n                name=\"state\"\r\n                onChange={this.handleChange}\r\n                //value={this.state.last_name}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                required\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                placeholder=\"Zip Code\"\r\n                className=\"controlForms\"\r\n                name=\"zipCode\"\r\n                onChange={this.handleChange}\r\n                //value={this.state.last_name}\r\n              />\r\n            </Col>\r\n          </Form.Row>\r\n        </Form.Group>\r\n        <Button variant=\"outline-danger\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Hospital;\r\n","import React from \"react\";\r\nimport { Button, Col, Form } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../InsuranceProviders.css\"\r\n\r\nclass InsuranceProviders extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      provider_name: \"\",\r\n      preExistingConditions: \"\",\r\n      deductable: 0\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  handleChange(event) {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header>\r\n              Insurance Provider's Data Upload\r\n        </header>\r\n        <Form.Group controlId=\"name\" className=\"groupForms\">\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Label className=\"labelForms\" column=\"sm\">\r\n                Provider Name\r\n              </Form.Label>\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                required\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                placeholder=\"Provider Name\"\r\n                className=\"controlForms\"\r\n                name=\"provider_name\"\r\n                onChange={this.handleChange}\r\n                // value={this.state.first_name}\r\n              />\r\n            </Col>\r\n          </Form.Row>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"name\" className=\"groupForms\">\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Label className=\"labelForms\" column=\"sm\">\r\n                Pre-existing Conditions\r\n              </Form.Label>\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                required\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                placeholder=\"Pre-existing Conditions\"\r\n                className=\"controlForms\"\r\n                name=\"preExistingConditions\"\r\n                onChange={this.handleChange}\r\n                // value={this.state.first_name}\r\n              />\r\n            </Col>\r\n          </Form.Row>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"name\" className=\"groupForms\">\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Label className=\"labelForms\" column=\"sm\">\r\n                Deductible\r\n              </Form.Label>\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                required\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                placeholder=\"Deductible\"\r\n                className=\"controlForms\"\r\n                name=\"Deductible\"\r\n                onChange={this.handleChange}\r\n                // value={this.state.first_name}\r\n              />\r\n            </Col>\r\n          </Form.Row>\r\n        </Form.Group>\r\n\r\n        <Button variant=\"outline-danger\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InsuranceProviders;\r\n","import React from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../Patients.css\"\r\n\r\nfunction Patients() {\r\n  return (\r\n    <div class = \"PatientsPage\">\r\n        <header>\r\n            <p>Patient's Data Uploader</p>\r\n        </header>\r\n            <div>\r\n            <Form className = \"FormPatients\">\r\n                <Form.Group className = \"GroupPatient\" controlId=\"PatientsFirst_Name\">\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\" \r\n                    className =\"internalText\" \r\n                    placeholder=\"First_Name\" \r\n                    />\r\n                    <Form.Text className=\"text-muted\">Variable Characters</Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group className = \"GroupPatient\" controlId=\"PatientsLast_Name\">\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\" \r\n                    className =\"internalText\" \r\n                    placeholder=\"Last_Name\" \r\n                    />\r\n                    <Form.Text className=\"text-muted\">Variable Characters</Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group className = \"GroupPatient\" controlId=\"PatientsDOB\">\r\n                    <Form.Label>Date of Birth</Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\" \r\n                    className =\"internalText\" \r\n                    placeholder=\"DOB\" \r\n                    />\r\n                    <Form.Text className=\"text-muted\">YYYY-MM-DD</Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group className = \"GroupPatient\" controlId=\"PatientsWeight\">\r\n                    <Form.Label>Weight</Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\" \r\n                    className =\"internalText\" \r\n                    placeholder=\"Weight\" \r\n                    />\r\n                    <Form.Text className=\"text-muted\">Integer</Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group className = \"GroupPatient\" controlId=\"PatientsHeight\">\r\n                    <Form.Label>Height</Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\" \r\n                    className =\"internalText\" \r\n                    placeholder=\"Height\" \r\n                    />\r\n                    <Form.Text className=\"text-muted\">Variable Characters</Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group className = \"GroupPatient\" controlId=\"PatientsSex\">\r\n                    <Form.Label>Sex</Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\" \r\n                    className =\"internalText\" \r\n                    placeholder=\"Sex\" \r\n                    />\r\n                    <Form.Text className=\"text-muted\">M or F Variable Char</Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group className = \"GroupPatient\" controlId=\"PatientsPhone_Number\">\r\n                    <Form.Label>Phone Number</Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\" \r\n                    className =\"internalText\" \r\n                    placeholder=\"Phone_Number\" \r\n                    />\r\n                    <Form.Text className=\"text-muted\">Phone Number for Patients</Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group className = \"GroupPatient\" controlId=\"PatientsBlood_Type\">\r\n                    <Form.Label>Blood Type</Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\" \r\n                    className =\"internalText\" \r\n                    placeholder=\"Blood_Type\" \r\n                    />\r\n                    <Form.Text className=\"text-muted\">A, AB, B, O AND +/-</Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group className = \"GroupPatient\" controlId=\"PatientsNumber_Of_Patients\">\r\n                    <Form.Label>Number of Patients</Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\" \r\n                    className =\"internalText\" \r\n                    placeholder=\"Number_Of_Patients\" \r\n                    />\r\n                    <Form.Text className=\"text-muted\">Positive Integer</Form.Text>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n                </Button>\r\n            </Form>\r\n            </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n} from \"react-bootstrap\"; // Navbar material\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../Header.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div>\r\n      {/* Navbar  */}\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"/\">Hospital for SQL Injectors</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <NavDropdown title=\"Data Uploaders\" id=\"collapsable-nav-dropdown\">\r\n            <NavDropdown.Item href=\"/hospitals\">Hospitals</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/doctors\">Doctors</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/patients\">Patients</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/insurance\">Insurance Providers</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/pharmacies\">Pharmacies</NavDropdown.Item>\r\n            </NavDropdown>\r\n            {/* <Nav.Link href=\"/pricing\">Pricing</Nav.Link> */}\r\n          </Nav>\r\n          <Nav>\r\n            {/* <Nav.Link href=\"/enterprise\">For Enterprise</Nav.Link> */}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Col, Form } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../Pharmacies.css\"\r\n\r\nclass Pharmacies extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      validate: false,\r\n      name: \"\",\r\n      streetAddress: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n      zipCode: \"\",\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* Name, Street, city, state, zip code */}\r\n        <header>\r\n            Pharmacy's Data Uploader\r\n        </header>\r\n        <Form.Group controlId=\"name\" className=\"groupForms\">\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Label className=\"labelForms\" column=\"sm\">\r\n                Name\r\n              </Form.Label>\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                required\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                placeholder=\"Pharmacies Name\"\r\n                className=\"controlForms\"\r\n                name=\"name\"\r\n                onChange={this.handleChange}\r\n                // value={this.state.first_name}\r\n              />\r\n            </Col>\r\n          </Form.Row>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"name\" className=\"groupForms\">\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Label className=\"labelForms\" column=\"sm\">\r\n                Address\r\n              </Form.Label>\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                required\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                placeholder=\"Street Address\"\r\n                className=\"controlForms\"\r\n                name=\"streetAddress\"\r\n                onChange={this.handleChange}\r\n                // value={this.state.first_name}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                required\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                placeholder=\"City\"\r\n                className=\"controlForms\"\r\n                name=\"city\"\r\n                onChange={this.handleChange}\r\n                //value={this.state.last_name}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                required\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                placeholder=\"State\"\r\n                className=\"controlForms\"\r\n                name=\"state\"\r\n                onChange={this.handleChange}\r\n                //value={this.state.last_name}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                required\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                placeholder=\"Zip Code\"\r\n                className=\"controlForms\"\r\n                name=\"zipCode\"\r\n                onChange={this.handleChange}\r\n                //value={this.state.last_name}\r\n              />\r\n            </Col>\r\n          </Form.Row>\r\n        </Form.Group>\r\n        <Button variant=\"outline-danger\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pharmacies;","import React from 'react';\r\nimport \"../Home.css\";\r\n\r\nfunction Home(){\r\n    return(\r\n        <div class=\"HomePage\">\r\n            Home Page\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Home;","import logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Doctors from \"./views/Doctors\";\nimport Hospital from './views/Hospital';\nimport InsuranceProviders from './views/InsuranceProviders';\nimport Patients from \"./views/Patients\";\nimport Header from \"./Components/Header\"\nimport Pharmacies from \"./views/Pharmacies\";\nimport Home from \"./Components/Home\";\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n   \n      <Router>\n        {/* header on every page */}\n        <Header /> \n        {/* Route */}\n        <Switch>\n          <Route path=\"/doctors\">\n            <Doctors />\n          </Route>\n          \n          <Route path=\"/hospitals\">\n            <Hospital />\n          </Route>\n\n          <Route path=\"/insurance\">\n            <InsuranceProviders />\n          </Route>\n\n          <Route path=\"/patients\">\n            <Patients />\n          </Route>\n\n          <Route path=\"/pharmacies\">\n            <Pharmacies />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}